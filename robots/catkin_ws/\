#ifndef LILISTBOT_H_
#define LILISTBOT_H_
#include "ros/ros.h"
#include "std_msgs/String.h"
#include "std_msgs/Float32MultiArray.h"
#include <dynamixel_workbench_toolbox/dynamixel_workbench.h>
#include <dynamixel_workbench_controllers/position_control.h>
#include <dynamixel_workbench_msgs/DynamixelStateList.h>
#include <dynamixel_workbench_msgs/JointCommand.h>
#include <sstream>

class LiliStbot{
public:
	LiliStbot();
	void run();
	void motorValueCallback(const std_msgs::Float32MultiArray& msg);
	void dynamixelStateCallback(const dynamixel_workbench_msgs::DynamixelStateList& msg);
	void servo();
	void sensor();
	void control();
	
private:
	ros::NodeHandle node_handle;
	ros::Publisher sensorValuePub;
	ros::Publisher controlParametersPub;
	ros::Subscriber motorValueSub;	
	ros::Subscriber dynamixelStateSub;
	ros::ServiceClient jointCommandClient;

	std_msgs::Float32MultiArray sensorValue;
	std::vector<float> command,commandTemp;
	std_msgs::Float32MultiArray controlParameters;
	
	std::vector<dynamixel_workbench_msgs::DynamixelState> dynamixelState;
	dynamixel_workbench_msgs::JointCommand jointCommand;
	unsigned int time;
	
};

#endif
